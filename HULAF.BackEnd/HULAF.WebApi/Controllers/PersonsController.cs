//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v12.0.0.0 (NJsonSchema v9.12.2.0 (Newtonsoft.Json v11.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

using Microsoft.AspNetCore.Mvc;
using System.Threading.Tasks;

namespace HULAF.WebApi.Controllers
{
    #pragma warning disable // Disable all warnings

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "12.0.0.0 (NJsonSchema v9.12.2.0 (Newtonsoft.Json v11.0.0.0))")]
    public interface IController
    {
        /// <summary>Gets a missing person by guid.</summary>
        /// <param name="personGuid">Guid of person</param>
        /// <returns>Returns a missing person</returns>
        System.Threading.Tasks.Task<MissingPersonDto> GetMissingPersonAsync(string personGuid);
    
        /// <summary>Lists missing persons</summary>
        /// <returns>Missing person list.</returns>
        System.Threading.Tasks.Task<System.Collections.Generic.IList<MissingPersonDto>> GetMissingPersonListAsync();
    
        /// <summary>A person seeks a missing person</summary>
        /// <returns>Get a person by guid</returns>
        System.Threading.Tasks.Task<SeekerPersonDto> SeekerpersonAsync();
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NSwag", "12.0.0.0 (NJsonSchema v9.12.2.0 (Newtonsoft.Json v11.0.0.0))")]
    [System.Web.Http.RoutePrefix("api")]
    public partial class Controller : System.Web.Http.ApiController
    {
        private IController _implementation;
    
        public Controller(IController implementation)
        {
            _implementation = implementation;
        }
    
        /// <summary>Gets a missing person by guid.</summary>
        /// <param name="personGuid">Guid of person</param>
        /// <returns>Returns a missing person</returns>
        [System.Web.Http.HttpGet, System.Web.Http.Route("missingperson/{personGuid}")]
        public System.Threading.Tasks.Task<MissingPersonDto> GetMissingPerson(string personGuid)
        {
            return _implementation.GetMissingPersonAsync(personGuid);
        }
    
        /// <summary>Lists missing persons</summary>
        /// <returns>Missing person list.</returns>
        [System.Web.Http.HttpGet, System.Web.Http.Route("missingpersonlist")]
        public System.Threading.Tasks.Task<System.Collections.Generic.IList<MissingPersonDto>> GetMissingPersonList()
        {
            return _implementation.GetMissingPersonListAsync();
        }
    
        /// <summary>A person seeks a missing person</summary>
        /// <returns>Get a person by guid</returns>
        [System.Web.Http.HttpGet, System.Web.Http.Route("seekerperson")]
        public System.Threading.Tasks.Task<SeekerPersonDto> Seekerperson()
        {
            return _implementation.SeekerpersonAsync();
        }
    
    }
    
    

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.12.2.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class MissingPersonDto 
    {
        [Newtonsoft.Json.JsonProperty("guid", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Guid { get; set; }
    
        [Newtonsoft.Json.JsonProperty("name", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Name { get; set; }
    
        [Newtonsoft.Json.JsonProperty("characteristics", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public object Characteristics { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });
        }
        
        public static MissingPersonDto FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<MissingPersonDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.12.2.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class SeekerPersonDto 
    {
        [Newtonsoft.Json.JsonProperty("guid", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Guid { get; set; }
    
        [Newtonsoft.Json.JsonProperty("name", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Name { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });
        }
        
        public static SeekerPersonDto FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<SeekerPersonDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.12.2.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class CharateristicsDto 
    {
        [Newtonsoft.Json.JsonProperty("guid", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Guid { get; set; }
    
        [Newtonsoft.Json.JsonProperty("approxHeightMin", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int ApproxHeightMin { get; set; }
    
        [Newtonsoft.Json.JsonProperty("approxHeightMax", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int ApproxHeightMax { get; set; }
    
        [Newtonsoft.Json.JsonProperty("hairColor", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public object HairColor { get; set; }
    
        [Newtonsoft.Json.JsonProperty("eyeColor", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public object EyeColor { get; set; }
    
        [Newtonsoft.Json.JsonProperty("approxAgeMin", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int ApproxAgeMin { get; set; }
    
        [Newtonsoft.Json.JsonProperty("approxAgeMax", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int ApproxAgeMax { get; set; }
    
        [Newtonsoft.Json.JsonProperty("knownNames", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.IList<string> KnownNames { get; set; } = new System.Collections.Generic.IList<string>();
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });
        }
        
        public static CharateristicsDto FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<CharateristicsDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.12.2.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum EyeColorDto
    {
        [System.Runtime.Serialization.EnumMember(Value = "green")]
        Green = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = "blue")]
        Blue = 1,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.12.2.0 (Newtonsoft.Json v11.0.0.0)")]
    public enum HairColorDto
    {
        [System.Runtime.Serialization.EnumMember(Value = "brown")]
        Brown = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = "blonde")]
        Blonde = 1,
    
    }

}